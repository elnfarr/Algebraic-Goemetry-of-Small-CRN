#In addition to the values returned by the EDD function (see Create EDD), this funciton additionally returns the dimension of the Jacobian matrix, and tells you when the codimension of the ideal is infinite. 
#This can be used for a list of CRNs.
#To use, load in the "ReactionNetworks" package before calling the function.

SuperEDD = G ->(
    R1 = createRing(G,QQ); 
    f=subRandomReactionRates G; 
    S=QQ[G.ConcentrationRates]; 
    g=apply(f,p->sub(p,S)); 
    I=ideal g; 
    u={random(QQ),random(QQ)};
    if codim (I) == infinity then return("codimension of I is infinite", G) else
    sing=I+minors(codim I, jacobian I); 
    M = (matrix{apply(# gens S, i->(gens S)_i-u_i)})||(transpose(jacobian I)); 
    J = saturate(I+minors((codim I)+1,M),sing);
    print("network:");
    print G;
    --print("steady-state equations:");
    --print(steadyStateEquations G);
    print(concatenate{"dim(J) and EDD: ", toString(dim J, degree J)});
    print(concatenate{"dim(I): ", toString(dim I)});
    print(concatenate{"degree(I): ", toString(degree I)});
    print(concatenate{"generators of singular locus: ", toString(gens gb sing)});
    print(concatenate{"dimension of singular locus: ", toString(dim sing)});
    print
)
